@using Ubik.Web.Auth.ViewModels
@model IEnumerable<RoleViewModel>
@{
    AddBackofficeBottom("UserAdministration/roles");
}

<aside class="right-side">

    <section class="content-header">
        <h1>
            @PageContent.Current.Title
            <small>@PageContent.Current.Subtitle</small>
        </h1>
        <ol class="breadcrumb">
            <li><a href="#"><i class="fa fa-dashboard"></i> Implement</a></li>
            <li><a href="#">the</a></li>
            <li class="active">breadcrump</li>
        </ol>
    </section>

    <section class="content">
        <div class="row">
            <div class="col-md-6">
                <div class="box box-primary">
                    <div class="box-header">
                        <h3 class="box-title">
                            Roles
                        </h3>
                        <div class="pull-right">
                            <a href="@Url.Action("new-role", "UserAdministration")" class="btn btn-primary">Create a new Role</a>
                        </div>
                    </div><!-- /.box-header -->
                    <div class="box-body table-responsive">
                        <table class="table table-hover table-condensed" id="roles-table">
                            <thead>
                                <tr>
                                    <th style="width: 40px">#</th>
                                    <th>Name</th>
                                    <th></th>
                                </tr>
                            </thead>
                            <tbody>
                                @for (var i = 0; i < Model.Count(); i++)
                                {
                                    var role = Model.ToArray()[i];
                                    <tr>
                                        <td>
                                            @if (role.IsSytemRole)
                                            {
                                                <i class="fa fa-desktop text-info" rel="tooltip" title="System Role"></i>
                                            }
                                            @if (role.IsPersisted)
                                            {
                                                <i class="fa fa-database text-info" rel="tooltip" title="Persisted Role"></i>

                                            }
                                            <span class="text-info">   @((i + 1).ToString("000"))</span>
                                        </td>
                                        <td>@Html.ActionLink(role.Name, "Roles", "UserAdministration", new { id = role.Name, area = "Backoffice" }, null)</td>
                                        <td>
                                            <button type="button" class="btn btn-primary btn-sm" data-toggle="modal" data-target="#copy-role-modal" data-source="@role.Name">Copy</button>
                                            @if (role.IsPersisted)
                                            {
                                                <a href="@Url.Action("DeleteRole", "UserAdministration", new {id = @role.Name})" class="btn btn-warning btn-sm">Delete</a>

                                            }
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div><!-- /.box-body -->
                </div>
            </div>
        </div>
    </section>
</aside>
@Html.Partial("~/Areas/Backoffice/Views/UserAdministration/Partials/RoleCopyModal.cshtml")