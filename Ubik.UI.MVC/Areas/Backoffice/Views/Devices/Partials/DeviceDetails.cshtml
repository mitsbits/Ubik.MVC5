@using Ubik.Web.Components
@using Ubik.Web.Components.AntiCorruption.ViewModels
@model DeviceViewModel

<aside class="right-side">
    <!-- Content Header (Page header) -->
    <section class="content-header">
        <h1>
            @PageContent.Current.Title
            <small>@PageContent.Current.Subtitle</small>
        </h1>
        <ol class="breadcrumb">
            <li><a href="#"><i class="fa fa-dashboard"></i> Implement</a></li>
            <li><a href="#">the</a></li>
            <li class="active">breadcrump</li>
        </ol>
    </section>
    <!-- Main content -->
    <section class="content">
        <div class="row">

            <div class="col-md-6">
                <div class="box box-primary">
                    @using (Html.BeginForm("UpdateLayout", "Devices", FormMethod.Post, new { role = "form" }))
                    {
                        @Html.AntiForgeryToken()
                    <!-- left column -->

                        <div class="box-body">

                            <div class="form-group hidden">
                                @Html.LabelFor(m => m.Id)
                                @Html.HiddenFor(m => m.Id, new { @class = "form-control" })
                                @Html.ValidationMessageFor(m => m.Id, "", new { @class = "" })
                            </div>
                            <div class="form-group">

                                <div class="input-group ">
                                    <span class="input-group-addon">
                                        <span>
                                            @Html.LabelFor(m => m.FriendlyName)
                                        </span>
                                    </span>
                                    @Html.TextBoxFor(m => m.FriendlyName, new { @class = "form-control", })
                                </div>
                                @Html.ValidationMessageFor(m => m.FriendlyName, "", new { @class = "" })
                            </div>

                            <div class="form-group">
                                <div class="input-group ">
                                    <span class="input-group-addon">
                                        <span>
                                            @Html.LabelFor(m => m.Flavor)
                                        </span>
                                    </span>
                                    <div class="form-control">
                                        @foreach (DeviceRenderFlavor option in Enum.GetValues(typeof(DeviceRenderFlavor)))
                                        {
                                            <div class="radio-inline">
                                                <label>
                                                    @Html.RadioButtonFor(m => m.Flavor, option) @option.ToString()
                                                </label>
                                            </div>
                                        }
                                    </div>
                                </div>
                                @Html.ValidationMessageFor(m => m.Flavor, "", new { @class = "" })
                            </div>

                            <div class="form-group">

                                <div class="input-group ">
                                    <span class="input-group-addon">
                                        <span>
                                            @Html.LabelFor(m => m.Path)
                                        </span>
                                    </span>
                                    @Html.TextBoxFor(m => m.Path, new { @class = "form-control" })
                                </div>
                                @Html.ValidationMessageFor(m => m.Path, "", new { @class = "" })
                            </div>

                            <div class="form-group">
                            </div>
                        </div>
                        <div class="box-footer clearfix">
                            <div class="form-group ">
                                <button type="submit" class="btn btn-primary pull-right">Submit</button>
                            </div>
                        </div>
                    }
                </div>
                @if (Model.Id != default(int))
                {
                    @Html.Partial("Partials/SectionCreate", new SectionViewModel() { DeviceId = Model.Id, SectionId = default(int)})
                }
            </div>
        </div>
    </section><!-- /.content -->
</aside>